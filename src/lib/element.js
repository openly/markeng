// Generated by CoffeeScript 1.7.1
var AssetRender, Element, FSManager, async, config, eventManager, fs, path;

fs = require('fs');

path = require('path');

async = require('async');

path = require('path');

config = require('../config');

eventManager = require('./event_manager');

FSManager = require('./fs_manager');

AssetRender = require('./asset_render');

Element = (function() {
  function Element(name, elementType) {
    this.name = name;
    this.elementType = elementType;
    this.elementDir = "/" + this.elementType + "s/" + this.name;
  }

  Element.prototype.getTemplate = function(callback) {
    return fs.readFile(path.normalize("" + config.dir + "/" + this.elementDir) + "/index.html", (function(_this) {
      return function(e, data) {
        if (e) {
          return callback(null, "" + _this.elementType + " \"" + _this.name + "\" not found");
        }
        return _this.raiseEvent('get_template', {
          template: data.toString()
        }, function(e, vars) {
          return callback(e, vars.template);
        });
      };
    })(this));
  };

  Element.prototype.render = function(callback) {
    return this.getTemplate((function(_this) {
      return function(e, template) {
        return _this.raiseEvent('render', {
          template: template
        }, function(e, args) {
          var templateEngine;
          templateEngine = require('./template_engine');
          return templateEngine.renderString(template, args, callback);
        });
      };
    })(this));
  };

  Element.prototype.title = function(callback) {
    return callback(null, "" + config.title + " :: " + this.name + " " + this.elementType);
  };

  Element.prototype.css = function(callback) {
    return this.raiseEvent('get_css', {}, function(e, args) {
      if (args.css instanceof Array) {
        return callback(e, AssetRender.css(args.css));
      } else if (args.css instanceof String) {
        return callback(e, AssetRender.css([args.css]));
      } else {
        return callback(e, '<!-- No CSS Files -->');
      }
    });
  };

  Element.prototype.js = function(callback) {
    return this.raiseEvent('get_js', {}, function(e, args) {
      if (args.js instanceof Array) {
        callback(e, AssetRender.js(args.js));
      }
      if (!(args.js instanceof Array)) {
        return callback(e, '<!-- No JS Files -->');
      }
    });
  };

  Element.prototype.raiseEvent = function(eventName, args, callback) {
    return eventManager.raiseEvent(this.elementType, eventName, this, args, callback);
  };

  return Element;

})();

module.exports = Element;
